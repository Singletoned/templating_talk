//- Use the presentation layout so we can keep this clean
extends layouts/presentation

//- Customize the title, meta description, and author using this block.
block title
  title Templating - Past, Present and Future
  meta(
    name="description"
    content="")
  meta(name="author" content="Ed Singleton")

block theme
  link(rel="stylesheet" href="css/theme/league.css" id="theme")

block styles
  style.
    html.screenshot div.slide-background.present {
      background-size: contain;
      background-color: #262722;
    }

//- Add your slides here. See templates/includes/_mixins.jade for information
//- on how `+slide` works.
block slides
  +slide
    h1 Templating
    h3 Past, Present and Future
    p
      small Presented by #[a(href="http://singletoned.com") Ed Singleton]
    p
      small #[a(href="https://twitter.com/singletoned") @Singletoned]

  +slide
    +slide
      h2 What is templating?
      p A system for generating different strings in different contexts
    +slide
      p
        small Context mostly referring to a collection of variables
      p
        code {"foo": 3, "bar": 5}

  +slide
    h2 What types of templating are there?
    h3.fragment (Lots)

  +slide
    h2 String Concatenation
    pre
      code '''&lt;div class="''' + foo_class + '''">Hullo&lt/div>'''
    ul
      li Difficult to read and maintain
      li Unsafe to run from untrusted sources (obviously!)
      li Complicated to correctly escape

  +slide
    h2 String Concatenation
    h3 Where's it used?
    p JavaScript
    pre
      code.javascript $("&lt;div class=\""+foo_class+"\">hello world&lt;/div>")

  +slide(
    data-background="images/backoffice.png", data-state="screenshot",
    data-background-transition="slide")

  +slide
    h2 String Templates
    pre
      code.python
        | "Hullo. Is it %s you're looking for" % foo
        | "Who let the {things} out?".format(things="Cats")
    ul
      li Structured and Safer
      li Logic free

  +slide
    h2 That Was The Past
    h3 (Hopefully)

  +slide
    h2 Executable
    div.left(style='float:left;width:48%')
      ul
        li Ruby
          ul
            li ERB
        li PSP (Python Server Pages)
          ul
            li mod_python
            li Spyce
            li Webware
    div.right(style='float:right;width:48%')
      ul
        li PHP
        li ASP
        li JSP
        li Python
          ul
            li Cheetah
            li Mako

  +slide
    h2 Executable
    ul
      li Allow arbitary code execution:
        ul
          li Turing Complete
      li Can be used for anything, not just html
      li Bracket / Expression / Bracket
      li Not safe to run templates from untrusted sources
      li The vast majority of templating

  +slide
    h2 Interpreted (sandbox environments)
    div.left(style='float:left;width:48%')
      ul
        li PHP Templates
          ul
            li Twig
            li Smarty
        li Python
          ul
            li Django Templates
            li Jinja2
        li Ruby
          ul
            li Liquid
    div.right(style='float:right;width:48%')
      ul
        li Safer, no arbitary code execution
        li Can run untrusted templates
        li Usually a limited syntax
        li Don't have full expressive power of the language
        li Can still be used for anything, not just html

  +slide(
    data-background="images/jinja2.png", data-state="screenshot",
    data-background-transition="slide")

  +slide
    h2 Logic-free
    ul
      li JavaScript
        ul
          li Mustache / Handlebars
      li Only a slight advance on string templates
        ul
          li Adds in loops and conditionals
      li Prevents business logic from being captured in templates
        ul
          li (And display logic)
      li Tends to lead to fatter controllers
      li Could be achieved in any other system with enough discipline
      li Inherently safe

  +slide
    h2 Structured (SGML)
    div.left(style='float:left;width:48%')
      ul
        li Python
          ul
            li ZPT (20 years old)
            li Kid
            li Genshi
        li Ruby
          ul
            li Radius
            li Amrita
        li Java
          ul
            li Thymeleaf
    div.right(style='float:right;width:48%')
      ul
        li Can't produce strings which are invalid SGML
        li Not Turing Complete
        li Safer
        li Normally safe to run other peoples templates

  +slide(
    data-background="images/genshi.png", data-state="screenshot",
    data-background-transition="slide")

  +slide
    h2 Structured (Whitespace Significant)
    div.left(style='float:left;width:48%')
        ul
          li Ruby
            ul
              li HAML
              li Slim
    div.right(style='float:right;width:48%')
      ul
        li JavaScript
          ul
            li Jade
        li Python
          ul
            li PyJade
    ul
      li Potentially suited to Pythonistas
        ul
          li We already tolerate whitespace significance
      li Can't produce strings which are invalid SGML
      li Not Turing Complete
      li Not inherently safe

  +slide(
    data-background="images/slim.png", data-state="screenshot",
    data-background-transition="slide")

  +slide
    h2 Structured (Internal DSL)
    ul
      li Python
        ul
          li Nevow Stan
          li Breve
          li werkzeug.utils.HTMLBuilder
      li Can't produce strings which are invalid SGML

  +slide(
    data-background="images/werkzeug.png", data-state="screenshot",
    data-background-transition="slide")

  +slide
    h2 Structured (Builders)
    div.left(style='float:left;width:48%')
      ul
        li Python
          ul
            li Elementree Builder
            li lxml.html.builder
        li Ruby
          ul
           li Hpricot (Deprecated)
           li NokoGiri
    div.right(style='float:right;width:48%')
      ul
        li JavaScript
          ul
           li DOMBuilder
           li 100s of others
        li Racket
          ul
           li X-Expressions
    ul
      li Build internal structures
        ul
          li Build, Manipulate, Serialize
          li Allows passing fragments around
      li Less readable in terms of document structure

  +slide
    h2 Structured (not SGML):
    ul
      li Python
        ul
          li SQLAlchemy
          li Django ORM
      li JavaScript
        ul
          li SASS/Less
      li Most query languages

  +slide
    h2 What does the future hold?
    h3 I don't know

  +slide
    h2 The Future - my guesses
    ul
      li More DSLs
      li Markdown and Jade make a wonderful pair
      li SGML is well served, but what about others?

  +slide
    h2 The Future - my guesses
    ul
      li Generating whitespace significant strings with a whitespace ignorant template system is painful
      li Jinja2 is not the best choice for Ansible and Salt
      li Another DSL for DevOps is likely
        ul
          li (Puppet already has one)

  +slide
    h2 The Future - my guesses
    ul
      li GraphQL is kind of a templating language
      li JSON templates to map database rows into JSON objects for APIs?

  +slide
    h2 The Future - my guesses
    ul
      li Anything verbose is a target for templating
      ul
        li.fragment Template Java code?
